package ${package}.${moduleName}.controller;


import cn.gov.customs.h2018.ctims.annotation.Audit;
import cn.gov.customs.h2018.ctims.constants.BaseConstants;
import cn.gov.customs.h2018.ctims.result.ResponseResult;
import ${package}.${moduleName}.param.${className}Param;
import ${package}.${moduleName}.service.${className}Service;
import ${package}.${moduleName}.vo.${className}Model;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiImplicitParam;
import io.swagger.annotations.ApiOperation;

import javax.servlet.http.HttpServletRequest;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;


/**
 * Description: ${comments}控制层
 * Copyright:   Copyright (c)2021
 * Company:     rongji
 *
 * @author ${author}
 * @version 1.0
 * Create at:   ${datetime}
 * <p>
 * Modification History:
 * Date         Author      Version     Description
 * ------------------------------------------------------------------
 * ${date}   ${author}        1.0       1.0 Version
 */
@RestController
@RequestMapping("/${classname}")
@Api(value = "${className}Controller", description = "${comments}")
public class ${className}Controller {


    @Autowired
    private ${className}Service service;


    /**
     * 新增
     */
    @RequestMapping(value = "/insert", method = {RequestMethod.POST})
    @ApiOperation(value = "${comments}新增")
    @Audit(module = "${comments}", serverName = BaseConstants.SERVER_NAME, describe = "新增${comments}")
    @ApiImplicitParam(name = "${classname}Model", value = "${comments}对象", required = true,
      dataType = "${className}Model", paramType = BaseConstants.PARAM_TYPE_FORM)
    public ResponseResult<${className}Model> insert(HttpServletRequest request, ${className}Model vo) {
        return ResponseResult.success(service.insert(vo));
    }


    /**
     * 删除
     */
    @RequestMapping(value = "/deleteById", method = {RequestMethod.GET})
    @ApiOperation(value = "${comments}删除")
    @Audit(module = "${comments}", serverName = BaseConstants.SERVER_NAME, describe = "删除${comments}")
    @ApiImplicitParam(name = "${pk.attrname}", value = "${pk.comments}", required = true,
      dataType = BaseConstants.DATA_TYPE_STRING, paramType = BaseConstants.PARAM_TYPE_QUERY)
    public ResponseResult<Integer> deleteById(HttpServletRequest request, String ${pk.attrname}) {
        return ResponseResult.success(service.deleteById(${pk.attrname}));
    }


    /**
     * 修改
     */
    @RequestMapping(value = "/updateById", method = {RequestMethod.POST})
    @ApiOperation(value = "${comments}修改")
    @Audit(module = "${comments}", serverName = BaseConstants.SERVER_NAME, describe = "修改${comments}")
    @ApiImplicitParam(name = "${classname}Model", value = "${comments}对象", required = true, dataType = "${className}Model", paramType = BaseConstants.PARAM_TYPE_FORM)
    public ResponseResult<${className}Model> updateById(HttpServletRequest request, ${className}Model vo) {
        return ResponseResult.success(service.updateById(vo));
    }


    /**
     * 查询
     * tips: 单条
     */
    @RequestMapping(value = "/selectById", method = {RequestMethod.GET})
    @ApiOperation(value = "${comments}单条查询")
    public ResponseResult<${className}Model> selectById(HttpServletRequest request, String ${pk.attrname}) {
        return ResponseResult.success(service.selectById(${pk.attrname}));
    }


    /**
     * 查询
     * tips: 列表
     */
    @RequestMapping(value = "/selectPage", method = {RequestMethod.GET})
    @ApiOperation(value = "${comments}列表查询")
    public ResponseResult<${className}Model> selectPage(HttpServletRequest request, ${className}Param param) {
        return ResponseResult.success(service.selectPage(param));
    }



}
